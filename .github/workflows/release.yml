name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Release
        id: release
        run: |
          export VERSION=$(echo $REVISION | sed -e 's/rc/./g' -e 's/^v//g')

          export DEB_FILE=report-core-"$VERSION".deb
          echo "::set-output name=deb_file::$DEB_FILE"

          installation_dir=$(pwd)/inst

          mkdir -p "$installation_dir"/DEBIAN
          cat <<EOF > "$installation_dir"/DEBIAN/control
          Package: report-core
          Version: $VERSION
          Section: tools
          Priority: optional
          Architecture: all
          Maintainer: syoch64@gmail.com
          Description: Report Core
          EOF

          mkdir -p "$installation_dir"/usr/share
          cp -r makefile.d "$installation_dir"/usr/share/makefile.d

          dpkg-deb --build "$installation_dir" $DEB_FILE
          rm -rf "$installation_dir"
        env:
          REVISION: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CROSS_TOKEN: ${{ secrets.GH_CROSS_TOKEN }}

      - uses: actions/create-github-app-token@v1
        name: Generate GitHub App Token
        id: generate-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          permission-actions: write

      - name: Make Release
        id: make_release
        run:
          gh release create $revision --generate-notes $DEB_FILE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEB_FILE: ${{ steps.release.outputs.deb_file }}

      - name: Call PPA Workflow
        id: call_ppa
        run: |
          echo $GITHUB_TOKEN | base64
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/$PPA_REPO/actions/workflows/upload.yml/dispatches \
            -d '{"ref":"main", "inputs": {"version": "'$REVISION'", "repo": "$OUR_REPO", "deb": "'$DEB_FILE'"}}'
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
          PPA_REPO: syoch/ppa
          REVISION: ${{ github.ref_name }}
          OUR_REPO: ${{ github.repository }}
          DEB_FILE: ${{ steps.release.outputs.deb_file }}
